<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>来自半山水同学的投稿</title>
    <url>/2025/01/04/banshanshui-1/</url>
    <content><![CDATA[<p>这篇文章中刊载的是来自半山水同学的投稿，这是这个网站第一次发布其它同学的投稿，感谢同学对网站高产的助力！</p>
<p>半山水同学写了两篇散文，如下：</p>
<span id="more"></span>
<p>第一篇：</p>
<p>徒留纸上三千字，不系枝头一枝春。</p>
<p>情感被我凝成墨色在纸上呻吟。饶是续写几千几万字又有何用，如果你不曾感同身受，如果你不曾向我靠近一步，那么几千几万同一字，又有何异?</p>
<p>泪水被我染成墨色在纸上哭诉。其实昨天也好，明天也罢，痛苦的永远是今天的那个我。其实不说也好，说了也罢，不过在字里行间自作自受，庸人自扰。</p>
<p>回忆嘛，我要做成彩虹，挂在心头。</p>
<p>我想看教室不住旋转的风扇，</p>
<p>我想听窗外不住起伏的蝉鸣。</p>
<p>你真傻，真的。</p>
<p>我不过想看你微蹙的蛾眉。</p>
<p>不过是想听你快活的笑声。</p>
<p>你却以为我想回去的是那个难耐的夏天。</p>
<p>究竟是看星星，看月亮，还是看天各一方的另一道目光？</p>
<p>到底是写春风，写姣花，还是写散落一地的另一页时光？</p>
<p>原以为上天并未给我提笔的勇气，原是藏在了一整座山头中的，纷纷落木般的思念里。</p>
<p>第二篇：</p>
<p>不是每个晦暗如墨的夜，都来的有缘由。</p>
<p>不是每滴澄澈晶莹的泪，都欠一个理由。</p>
<p>想要什么，得到什么，失去什么。</p>
<p>想要怎样，过得怎样，过去怎样？</p>
<p>我们当然会笑，会快乐，会有肆意的情感像春风拂过草色青青。</p>
<p>我们只是难过，为在意的，不在意的，为存在的，不存在的。为第九十九次心跳，第一千次呼吸，为那记不清次数的烦躁与痛苦。</p>
<p>那时，看见与没看见，听见与没听见，在意与不在意，存在与不存在。统统模糊了界限，像在雨中眯起了双眼，声音跟着视线朦胧，思绪跟着雨线，在脸颊，在身旁，在某个角落，宁静又放纵，一点一点滑落在那片黑色的天空。</p>
<p>不作声，不动弹，万千思绪中，忘记了要紧抓不放的，忘记了要弃之如敝的。每一次思考都像雨线划过夜幕，短暂、混乱渗入黑色的大地，了无痕迹。黑色的天空没有乌云，我没有给自己撑伞。</p>
<p>夜幕不知道要怎样揭开，大雨不知道要怎样平息。</p>
<p>也许明天？后天？我不知道，我只知道，总会放睛。</p>
]]></content>
      <categories>
        <category>投稿</category>
      </categories>
      <tags>
        <tag>投稿</tag>
      </tags>
  </entry>
  <entry>
    <title>二零二五，愿你有勇气与梦想</title>
    <url>/2024/12/25/courage&amp;dreams2025/</url>
    <content><![CDATA[<p>今天是圣诞节，圣诞节快乐！</p>
<p>二零二四的进度条已经加载到98％了。</p>
<span id="more"></span>
<p>二零二四发生的事情很多，这一年，我度过了高三下半年，完成了高考，拿到了录取通知书，享受了近三个月的假期，来到了北京，庆祝了十八岁生日，又在忙碌中度过了大一上学期。</p>
<p>“往事总是在回忆时被赋予意义”，我真心觉得，对于我来说，二零二四已经足够好了。</p>
<p>人生需要很多仪式感，跨年也是，朋友，当你看到这篇文章时，不妨稍稍停下脚步，认真地同二零二四告个别，毕竟，这是你人生中唯一一个二零二四年，也是人类历史上唯一一个二零二四年。</p>
<p>今天不是新年前夕，但不妨把这当成一个彩排。</p>
<p>二零二四，再见了。</p>
<p>二零二五，你好。</p>
<p>亲爱的朋友，或许你我素不相识，但新的一年，我仍祝你，也祝我自己：新年快乐，愿你仍能有勇气与梦想，你一定是被神明护佑着的孩子。</p>
<img data-src="/illustrations/二零二五，愿你有勇气与梦想_01.jpg" style="zoom:50%;">
]]></content>
      <categories>
        <category>殊日</category>
      </categories>
      <tags>
        <tag>仪式感</tag>
      </tags>
  </entry>
  <entry>
    <title>让世界更加正确</title>
    <url>/2025/01/14/ecp-idea/</url>
    <content><![CDATA[<p>什么是让世界更加正确？</p>
<p>我想，那在一些方面体现为：让世界更加真实，让世界更加友好，让世界更加纯粹。</p>
<span id="more"></span>
<p><code> ECP:Empathy, Clarity, Purity</code></p>
]]></content>
      <categories>
        <category>思考</category>
      </categories>
      <tags>
        <tag>ECP</tag>
      </tags>
  </entry>
  <entry>
    <title>“沽月”三周年</title>
    <url>/2025/03/10/guyue-third-anniversary/</url>
    <content><![CDATA[<p>你还记得“沽月”是什么吗？是的，“沽月”是我的笔名。在高一下半学期的某个晚上，在宿舍的我正式将“沽月”确定为我的笔名，那天是2022年3月10日，到今天，刚好是三周年。所以，首先，沽月三周年快乐！</p>
<span id="more"></span>
<p>如果你认识我的话，那么你可能会知道，“沽月”是和我的名字相关的，我构思这个笔名时参考了一些知名作家构建笔名的思路。</p>
<p>我的MBTI测试结果是INTJ，也就是大家所熟知的“紫色小老头”，在我看来，“沽月”的产生是我的性格的必然外化结果，“这是计划的一部分”。</p>
<p>于我本人而言，“沽月”的意义发生了多次比较大的转变。从其本质来看，“沽月”于我的意义发生了从“幻想朋友”到“理想化形象”再到“超我的载体”最后到如今“接近真正意义上的笔名”的变化过程。对于非我之人来说，其自始至终认识的“沽月”应皆为处于第四个阶段的“沽月”，即作为接近真正意义上的笔名而存在的“沽月”。</p>
<p>过往已往，未来已来。</p>
<p>过去的三年中，沽月完成了从中学到大学的过渡，未来，还会有更多的“三年”到来，会发生些什么呢？我不知道，我也不奢求知道。然而我知道的是，朋友们，沽月仍愿与你们一同前行，去见证社会的变化、时代的变迁与人类的走向，去让这个世界变得更“正确”一点，这是计划的一部分。</p>
]]></content>
      <categories>
        <category>殊日</category>
      </categories>
      <tags>
        <tag>仪式感</tag>
        <tag>沽月</tag>
      </tags>
  </entry>
  <entry>
    <title>乙巳蛇年，新年快乐</title>
    <url>/2025/01/29/happy-year-of-the-snake-2025/</url>
    <content><![CDATA[<p>今天是乙巳蛇年正月初一，祝看到这篇文章的你乙巳蛇年新年快乐！</p>
<span id="more"></span>
<p><img data-src="https://bpic.588ku.com/back_list_pic/22/12/27/05fdc057bbe1f293ad424e87bb4c0729.jpg" alt="fireworks"></p>
]]></content>
      <categories>
        <category>殊日</category>
      </categories>
      <tags>
        <tag>仪式感</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2024/12/21/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>
<h2 id="Quick-Start">Quick Start</h2>
<h3 id="Create-a-new-post">Create a new post</h3>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server">Run server</h3>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files">Generate static files</h3>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>2025，新年快乐</title>
    <url>/2025/01/01/happy-new-year-2025/</url>
    <content><![CDATA[<p>We have officially launched a new version of the year for you.</p>
<p>Year Version: 2025.0</p>
<span id="more"></span>
<p>Download Progress: 100%</p>
<p>Installation Progress: 100%</p>
<p>Restarting…</p>
<p>System Loading…</p>
<p>Update Completed.</p>
<p>Welcome to 2025.0 version year!</p>
<p>Happy New Year!</p>
<p>翻译：</p>
<p>我们已正式为您推出全新版本年份。</p>
<p>年份版本：2025.0</p>
<p>下载进度：100%</p>
<p>安装进度：100%</p>
<p>系统重启中……</p>
<p>系统加载中……</p>
<p>更新完成。</p>
<p>欢迎体验2025.0版本年份！</p>
<p>新年快乐！</p>
]]></content>
      <categories>
        <category>殊日</category>
      </categories>
      <tags>
        <tag>仪式感</tag>
      </tags>
  </entry>
  <entry>
    <title>测试</title>
    <url>/2024/12/22/test/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="92108c1f2150f2df5e34d0e116c68becf606009df68a61851843b7431d96ca25">bd25ed9264b080267271e137e33d0ce13e7138a7af4beda1d0bc728121ff5e944e757db9bbb498a62d29102d4a3ff7948330d95086d697031d8bcaec50d6ae88b52fe02f1635eea54b5c0dda58f4350878122f6fb1551cfe7955a9e29985a3eb8ba6222f77d55107f797681eaed0e5043e7bcf651d1ec15702caa5ea0510d0377a7ea72894247917c25800246f10d8256acf781104fe5177631be2b710cf8c30f41d08531e7eae8764e954af3ddf5d39457d968d4a3d88ed996d68f15c037d31845f9836a9142ad5fabdb462dd75c629eaef7bbd2c747185e95af379479af59e2603b01d53b162828ffdb32f4c3bc113ee478fe30f40186b1fbc4ede463584e312e6b360bb069ae457e9d2351c7be8a79ea89689a52624cc401f133b6037a901da838391a1a4f9656fbf502731d5929ecb6ae021be617a8b61bc9e2486bab24d85ee9d0ce0ad79be466ae40d2f76b40bac665b425e826c72920a42f2dc834ed7fd39e34a34f9250eb3715089dbfd7ac1c9c2040ce104d03aa890c7e78663914763bc0de90b587efb1919a791fbfad73a6d79d1ed8a84b7999e3502b39cac397989514268c151e96e7cecc0fd1808f1a5290d91b97ff0652f055e76cdc264c3db92175b85bf930e0f3682da0f3de28803d3c09879e582aac130a61bae96d42c8a90f459bf1515c9cb09647aabbefa8c9ea0497e6c30fc42c7ef6dbf8c73fd1b819485a6365523a03b43c9954940add69ce6aeee2f7759cdc26d98f44992e340c9e182300dc42311ec8c3c9f1474532bf297987ce8f068bcac9c2aae96d747aa6129f920fdfda927223c8748ab0998fc07224216268b583669620be650381d7c8e7267787400765e61ead0e09363468f025883949eff76b69dbb20952fb1dfb48344efe4a4ae0ecc89539309a9097d0f7fe15fdf4f595dc5c14e92214594d2ce976238f7aec45c926a4acbf18aff59158ba09208203185c42aadb30ea4d114443c1df24d6ce031d380287974ec4dc62fa2393224106c034e88f3f17a3faf859f0c242caf672b48f371df6ce0ca19e646e99df44c0ee66b38feca33142f58fc9dfaaa22889b01371fdd60b36ed3f70949cedd974637ee5f61b4b3a504a82ee28aa6f556dbc422ff37da1a05946256931341fe7166528d4a50f6c29f14cc79d367d3f29bad6a4ce830b7fc910b1202a2dddf98b864174a90e5d81c0a585a34322034f1e4d64dd753bc667de06540ad1dcfa322b9b418587235180a03fb0b3d68991bf145358fdc509b46f7e35ccc31fc1b6331ac764916a6f1ef6d2b5110b837867a</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>零碎的启发性观点 · 一</title>
    <url>/2025/03/08/inspiring-ideas-1/</url>
    <content><![CDATA[<p>由于时间和精力有限，有时候在某处看到的观点很难专门写一篇文章来记录、思考与阐释。所以我想着专门出一期文章把零碎的观点汇总起来，一方面，可以很好的记录它们，另一方面，我想着，当把它们放在一起时，会不会发生某种或某些奇妙的化学反应呢？</p>
<span id="more"></span>
<ol>
<li>
<p>“对一种东西祛魅的最好方式就是拥有它”</p>
</li>
<li>
<p>没有特别在意的事时，内心就会变得强大</p>
</li>
<li>
<p>不能惯着平台？（大数据）</p>
</li>
<li>
<p>有些事不一定只能在结果上看到意义，或许在过程中也能看到很大的意义</p>
</li>
<li>
<p>看五年，想三年，认真做好一两年</p>
</li>
<li>
<p>真正有价值的，永远都在书中</p>
</li>
<li>
<p>@Try: 史铁生说，如果你抑郁了，说明你活在过去，如果你焦虑了，说明你活在未来，如果你平静了，才说明你活在现在。</p>
</li>
<li>
<p>老百姓的需求就是创业的机会</p>
</li>
<li>
<p>寻求答案，就是等于让他人来帮你做选择，而你放弃了自己的选择</p>
</li>
<li>
<p>"敏感的人要承受双倍的难过，所以我希望你可以迟钝一点”</p>
</li>
<li>
<p>“我将永远忠诚于这短暂的一生”</p>
</li>
<li>
<p>第一性原理，看清事物的本质。</p>
</li>
<li>
<p>技术创造可能，人文定义方向。文科是人类前进的指南针。</p>
</li>
<li>
<p>教育的真谛不是将所有人送上独木桥，而是帮助每个学习者找到属于自己的战场。或许正如Linux内核中那句著名注释：“Talk is cheap. Show me the code.”——在算法霸权时代，普通院校学生更需要用实实在在的代码，在产业土壤中浇灌出独特的职业之花。</p>
</li>
<li>
<p>人始终是最重要的</p>
</li>
<li>
<p>电话卡一扔，微信一换，你还知道我什么？</p>
</li>
<li>
<p>我本身存在着偏见</p>
</li>
<li>
<p>人心中的偏见是一座大山</p>
</li>
<li>
<p>理想主义的花，一定会开在世界上的各个角落</p>
</li>
<li>
<p>纸上得来终觉浅</p>
</li>
<li>
<p>一定有更美好的事值得你去期待</p>
</li>
<li>
<p>命运，在于你的视角与解释？</p>
</li>
<li>
<p>雨是天空的烟花还是上帝的眼泪</p>
</li>
<li>
<p>“当你把自己当成世界的客人时，世界也一定会好好款待你。”</p>
</li>
<li>
<p>成为那个不需要逃跑的人</p>
</li>
<li>
<p>或许我们只是需要半天的闲暇</p>
</li>
<li>
<p>真相或许比你所听到的要好的多，所以你要自己去了解</p>
</li>
<li>
<p>00后和20后已经有20年了</p>
</li>
<li>
<p>正如理性并不完全正确一样，计划也并不完全正确，未在计划中的同样可以是对的</p>
</li>
<li>
<p>从群众中来，到群众中去</p>
</li>
<li>
<p>沉没成本不参与重大决策，已有损失不影响当期决策</p>
</li>
<li>
<p>在保留情绪的同时，超越情绪对理性的干扰。不会极端放纵自己的情绪，也不会极端压抑自己的情绪，从而达到内心的平衡和和谐。</p>
</li>
<li>
<p><em>“I couldn’t think of anything more exciting, fun, and inspiring for the future than to have a base on <a href="http://Mars.It">Mars.It</a> would be incredibly difficult. Probably lots of people will die, and terrible and great things will happen along the way, just as they happened in the formation of the United <a href="http://States.It">States.It</a>’ll be one of those things that is incredibly inspiring, and we must have inspiring things in the world.Life cannot just be about solving this problem or that problem. There must be things that, when you wake up in the morning, you’re glad to be alive.That is, for me, the most important reason why we should pursue the establishment of life on Mars.”</em></p>
</li>
</ol>
]]></content>
      <categories>
        <category>思考</category>
      </categories>
      <tags>
        <tag>思考</tag>
        <tag>启发性观点</tag>
      </tags>
  </entry>
  <entry>
    <title>关于构建个人生产力系统的思考</title>
    <url>/2025/02/20/reflections-on-personal-productivity-system/</url>
    <content><![CDATA[<h3 id="我的“个人生产力系统”创建历史">我的“个人生产力系统”创建历史</h3>
<p>作为一个J人，在很长时间以来，我一直在尝试着建立一个融合项目管理，任务管理，时间管理，笔记管理的个人生产力系统。</p>
<span id="more"></span>
<p>首先，我想阐明一下我认为的“个人生产力系统”应该满足的条件：</p>
<ol>
<li>
<p>它必须具有很强的可交互性和可访问性，我可以随时随地很容易地接触到这个系统。</p>
</li>
<li>
<p>它要具有较强的稳定性。这里的稳定性是指它能保持“简单”并提供长期有效的生产力，它的重要功能是把我们的大脑从琐碎事物中解放出来。</p>
</li>
<li>
<p>它要具有一定的可迁移性，我可以借助这个系统与外界进行更有效的交互。</p>
</li>
<li>
<p>它要具有一定的可修复性，可改变性，甚至是可颠覆性。我希望这个系统不会成为一个限制个人发散式成长的事物，而是一个可以随着个人的心智与认知的改变而发生相应改变的工具。</p>
</li>
</ol>
<p>对于我个人而言，在过去一年中，我的所谓的“个人生产力系统”主要经历了从纸质版到电子化的变化，大一之前，受限于高中时期对电子设备的接触有限，我对个人事项的所有管理与规划基本都是在纸质笔记本上进行的。进入大学后，由于电子设备的接触时间大幅度增加，构建一个“电子化系统”便是自然而然、水到渠成的一件事了。</p>
<p>大一上半学期所形成的“系统”借助的主要工具是纸质笔记本，荣耀笔记（手机端，平板端，电脑端）和Typora（电脑端的一个笔记软件），目前来看，这一套工具是相对来说对我是行之有效的。</p>
<p>简单介绍一下使用这些工具的原因吧：使用荣耀笔记是因为我个人的设备生态是荣耀生态，荣耀笔记支持不同设备间的数据同步；使用Typora是因为我很喜欢这个笔记软件的简洁风格，同时它是一个Markdown文档的编辑软件，这使得我可以仅仅通过键盘来实现对文字的操作，减少了对鼠标的使用，从而帮助我更加专注于文字的撰写过程，唯一的缺点是它目前不支持在Android平台使用，所以我只能在电脑上使用这个软件。</p>
<p>目前我是用的仍是基于这套工具的系统，我也一直在探索新的效率工具，因为我是一个效率主义者。当前的这套工具是以笔记为核心的，这在项目，任务，笔记管理上很方便，但在时间的管理分配上稍逊。</p>
<p>如果各位有什么新的想法或好的建议的话，我非常乐意和大家交流。</p>
<h3 id="在探索效率工具时的思考">在探索效率工具时的思考</h3>
<p>最近一段时间我一直在了解各种新的效率工具软件，到目前为止，我并没有接触到让我更满意的工具，但却接触到了许多关于效率工具的启发性观点，总结如下：</p>
<ol>
<li>在使用工具时我们应该思考如何保持简单，从而让建立在工具上的系统保持简单并提供长期有效的生产力，从而保持我们的心智容量。</li>
</ol>
<blockquote>
<p>注：「心智容量」是认知科学中的一个概念，指的是人脑在短时记忆或工作记忆中处理和保持活跃的信息数量的上限。简单说，就是我们的大脑一次能处理多少信息的能力。</p>
</blockquote>
<ol start="2">
<li>
<p>工具只是手段，不是目标，我们不必拘泥于使用什么工具，建立什么系统，只需要找到符合个人需求和工作风格的方法即可。</p>
</li>
<li>
<p>关于如何打造「简单且长期有效的生产力」，最重要的是，尽量选择使用工具在设计之初被赋予的能力，而不是使用哪个工具。别试图让工具去完成它们本不应处理的任务，尽可能地利用工具原本被赋予的功能。因为，在使用上越偏离工具最初设计的功能，就会带来越多的心智负担。</p>
</li>
<li>
<p>个人生产力系统的核心是思考，通过“思考”，把我们的大脑从琐碎事物中解放出来，从而保持我们自己的心智容量，让我们更加专注于自己当前做的事情之中。</p>
</li>
</ol>
<p>以上是对最近一段时间在探索效率工具领域时的的发现与思考的总结，未来如果有什么新的想法和发现的话，我会对这篇文章进行更新。<br>
当然，我也非常欢迎你跟我交流一些你的想法，<a href="http://xn--sober-1l6j51vwk9azzje16c.th">我的邮箱是sober.th</a>@qq.com，期待你的邮件。</p>
<h3 id="参考文章">参考文章</h3>
<ul>
<li>
<p><a href="https://sspai.com/post/84938">简单且长期有效的生产力 - 少数派</a></p>
</li>
<li>
<p><a href="https://sspai.com/post/61092">任务管理这件事 - 少数派</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>探索</category>
        <category>思考</category>
      </categories>
      <tags>
        <tag>个人生产力系统</tag>
        <tag>效率工具</tag>
        <tag>持续更新</tag>
      </tags>
  </entry>
  <entry>
    <title>我真正渴求的是什么</title>
    <url>/2025/01/02/what-am-I-craving/</url>
    <content><![CDATA[<p>这篇文章是写给我自己的，本来没有计划把这篇文章发布在网站上，但写完后感觉这篇文章或许能对其他人产生或多或少的帮助，所以将其放在了这里。</p>
<p>如果你对这篇文章感兴趣的话，你可以看一看。</p>
<span id="more"></span>
<p>现在是二零二四年十二月三十一日凌晨零点二十二分，是的，今天是二零二四年的最后一天。</p>
<p>今天是有考试的，英语考试，因为这，所以我本准备很早就睡的，十一点半的时候就已经准备进入睡眠状态了，中间经历了一会浅睡眠。我是一直听着歌的，听的是自己印象比较深的那些，主要以二二年的为主。</p>
<p>可能是因为生物钟的问题吧，我这会儿很难进入深度睡眠，正好这会儿心中有一些新的想法，所以干脆先不睡，先把自己的想法记录下来。</p>
<p>我刚才所思考的主要问题就是你所看到的标题，即“我真正渴求的是什么？”</p>
<p>准确来说，我刚才所思考的并不是我渴求的全部，而是我渴求的全部中的一部分，这部分我认为是很重要的。</p>
<p>我认为，从某种程度上来说，我所渴求的是一种认可，或者说是一种“正确”所带来的安全感，我希望我是走在一条“正确的”道路上的。</p>
<p>可是，我好像很难真正意义上得到“正确”的标准，或者说很难得到来自外界的“正确的”对我的“正确性”的评判，与此同时，也很难判断自己对自己的“正确性”的评判是否是正确的。</p>
<p>首先，就外界而言，你怎么能确定外界对你的“正确性”的评判一定是正确的呢？因为，每个人都有其局限性，每个人的观点都是片面的，而且每个人的具体情况都是有差别的，他人的观点对你来说不一定是正确的。</p>
<p>然后，就内界而言，我怎么能确定我对我自己的“正确性”的评判一定是正确的呢？因为，我本就有我自己的局限性，用本就可能不太正确的观点来证明自己的未知正确性的观点，最后得出的关于“正确性”的判断是可信的吗？</p>
<p>说实话，其实我有时候真挺希望有个人能够告诉我我做的事是怎样的。</p>
<p>但这个时候我又有一点顾虑了，就是，我怎么能确定我找到的这个人一定是正确的呢，所以，我怎么能把我的思想交给另一个我尚不能确定情况的思想呢？</p>
<p>所以，很多时候，我还是认为，只有自己才是最可信的，那么怎么给自己定一个正确的标准呢，或者说，选择哪个时候的自己作为正确的参照呢？</p>
<p>在此以前，我没有仔细具体地想过这个问题。但当我回首我相当长的一段时间以来做决定采取的标准时，我发觉我好像是主要以考虑小时候的感受为主的，也就是说，那就是我所认为的“真正正确”的来源。这么一想好像突然就释怀了，是啊，谁会跟小时候的自己作对呢，况且，我真觉得我小时候的自己做得挺对的，做得挺好的，我很感谢他。</p>
<p>除了考虑小时候的自己之外，我做决定时还考虑了之后的自己的想法，比如中考后提出的“加油吧，为了你过去的辉煌，更为你将得的辉煌”，比如高三后期进行自我重新建立时牢记的“为天地立心，为生民立命，为往圣继绝学，为万世开太平”，比如高考前提出的“让世界更加正确”等等，这些想法就像一个个路标，帮助我确认我是否还走在我当初确立的方向上。</p>
<p>其实，再仔细想想，我当初确立的这个方向是哪个方向呢，它可能本就不是一个已经确定的方向，而是一个会随着我的新经历、新想法而不断调整的一个方向。</p>
<p>想到这里，我又释然了一些，我更加相信人生是一场经历和体验这个想法了，因为人生只有一次，你只能选择一条路去走，而且无论你选择的是什么，都没有对错之分，因为没有人有资格去判断另一个人的选择的“正确性”。</p>
<p>所以，其实，你真正相信的是什么呢，或者说，你真正的“正确性的判断标准”是什么呢，我想答案已经很明了了。</p>
<p>是的，你真正相信的是你的直觉，是你的直觉在告诉你你应该怎么做，这直觉是独属于你的，所以你真正相信的的是你自己，不管是哪个阶段的自己，那都是你，你是统一的。</p>
<p>是的，你真正相信的，是你自己。</p>
<p>你真正渴求的，也正是来自你自己对自己的认可。</p>
<p>你是统一的，不必把各个阶段的自己区分开，过去的你，现在的你，未来的你，都是你，你是统一的。</p>
<p>不管你相信的是自己哪个阶段的想法，你相信的都是自己，而且，既然你能想到，说明那就是你的直觉，而这直觉，是现在的你的直觉，现在的你，还是你。</p>
<p>你自始至终所采纳的标准，都是你的标准，你的标准就是你想法的体现。</p>
<p>接纳过去，接纳现在，面对未来。过去的你做得很好，现在的你做得也很好，现在的你或许存在缺点，但过去也是这样。</p>
<p>“往事总是在回忆时被赋予意义”，但无论如何，过往的你是你，现在的你也是你，未来的你也终将是你，你始终是你啊，你是一个完整的，统一的个体。</p>
<p>所以，你有时候不必单独考虑过去的你，因为，过去的你就是现在的你啊，你始终是你，你就在这，现在的你就是完整的你的体现，所以，现在的你，去做吧，按照你的直觉来做，去经历吧，去体验吧，相信你会不虚此行。</p>
<p>你是认可你的啊，对的，这就够了，这，就是你所渴求的。</p>
]]></content>
      <categories>
        <category>自言</category>
        <category>思考</category>
      </categories>
      <tags>
        <tag>渴求</tag>
        <tag>正确性</tag>
        <tag>直觉</tag>
      </tags>
  </entry>
  <entry>
    <title>分享一些文章</title>
    <url>/2025/03/11/articles_sharing/</url>
    <content><![CDATA[<p>最近一段时间在浏览一些社区时看到了一些对我个人启发性很强的、有深度的文章，我把链接附在下面。</p>
<span id="more"></span>
<ul>
<li><a href="https://sspai.com/post/84938">简单且长期有效的生产力 - 少数派</a></li>
<li><a href="https://sspai.com/post/96150">Deepseek 教我的法则：不是要「会提问」，而是要「早动手」 - 少数派</a></li>
<li><a href="https://sspai.com/post/96413">一个普通用户的AI搜索手记——新手报到 - 少数派</a></li>
<li><a href="https://sspai.com/post/95426">让新知识成为冒险游戏，用 AI 重构「学习」这件事 - 少数派</a></li>
<li><a href="https://sspai.com/post/97102">非技术背景如何理解大模型？ - 少数派</a></li>
<li><a href="https://sspai.com/post/97014">2025 年关于「家」的开发计划，更适合 J 人的生活方式 - 少数派</a></li>
<li><a href="https://sspai.com/post/97132">2024：真实世界里的爱与失去 - 少数派</a></li>
</ul>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>持续更新</tag>
        <tag>文章分享</tag>
      </tags>
  </entry>
  <entry>
    <title>零碎的启发性观点 · 二</title>
    <url>/2025/03/22/inspiring-ideas-2/</url>
    <content><![CDATA[<p><code> 由于时间和精力有限，有时候在某处看到的观点很难专门写一篇文章来记录、思考与阐释。所以我想着专门出一期文章把零碎的观点汇总起来，一方面，可以很好的记录它们，另一方面，我想着，当把它们放在一起时，会不会发生某种或某些奇妙的化学反应呢？</code></p>
<p>下面是第二期：</p>
<span id="more"></span>
<p>1.“标准答案”还是心之所向？</p>
<p><code>“你的时间有限,不要浪费在过别人的生活上。”</code></p>
]]></content>
      <categories>
        <category>思考</category>
      </categories>
      <tags>
        <tag>思考</tag>
        <tag>启发性观点</tag>
        <tag>持续更新</tag>
      </tags>
  </entry>
  <entry>
    <title>汇总一些网站</title>
    <url>/2025/03/11/webs/</url>
    <content><![CDATA[<p>为了便于查找，我在下面汇总了一些我认为的有用或有趣的网站。</p>
<span id="more"></span>
<h3 id="一，一些大佬的网站">一，一些大佬的网站</h3>
<p>在搭建个人网站的时候，我在网上看到了一些其他人搭建的博客网站，那些网站在很大程度上激励并启发了我，现在把其中的一部分附在下面：</p>
<ul>
<li><a href="https://blog.skk.moe/">Sukka’s Blog</a></li>
<li><a href="https://blog.rxliuli.com/">rxliuli blog</a></li>
<li><a href="https://chen-huaneng.github.io/">AbelのBlog</a></li>
<li><a href="https://www.guhub.cn/">Eltrac / 帆迹</a></li>
<li><a href="https://diligencyj.github.io/">前程万里</a></li>
<li><a href="https://okita1027.github.io/">沖田さん の ブログ</a></li>
<li><a href="https://lutaonan.com/">Randy’s Blog</a></li>
<li><a href="https://www.voidking.com/">好好学习的郝</a></li>
<li><a href="https://ijiaober.github.io/">{ GoonX }</a></li>
<li><a href="https://gav1n-cheung.github.io/">Cheung’Blog</a></li>
<li><a href="https://www.yrzhe.love/">愚人哲</a></li>
<li><a href="https://lisijian.cn/">思建的NLP之旅</a></li>
<li><a href="https://promethuesyuan.github.io/">Yuan’s Blog</a></li>
<li><a href="https://ktcry.cn/">流情|导航站</a></li>
<li><a href="https://www.imuu.cn/">浅浅时光-珍藏岁月</a></li>
<li><a href="https://immmmm.com/about/">木木木木木</a></li>
<li><a href="https://blog.dreamfall.cn/">梦落の小屋 - 梦璃雨落</a></li>
<li><a href="https://xecades.xyz/">Xecades</a></li>
<li><a href="https://skywt.cn/">SkyWT</a></li>
<li><a href="https://herobrine101.top/"> Tilly Endless’s Blog</a></li>
<li><a href="https://souta.cc/friends"> Souta’s Space</a></li>
<li><a href="https://blogwe.com/allblogs.html">博客我们 - Blogwe</a></li>
</ul>
<h3 id="二，一些与AI有关的工具">二，一些与AI有关的工具</h3>
<ul>
<li><a href="https://smartestu.cn/#/chat/1002">数你最灵</a></li>
<li><a href="https://chat.ruc.edu.cn/c/3f7807f6-10ed-4faa-89b6-57166c73a7a9">Open WebUI</a></li>
<li><a href="https://www.deepseek.com/">DeepSeek | 深度求索</a></li>
<li><a href="https://chat.deepseek.com/">DeepSeek - 探索未至之境</a></li>
<li><a href="https://www.genspark.ai/">Genspark - 重塑搜索，AI智能体引擎。</a></li>
<li><a href="https://gamma.app/">Gammas - Gamma AI PPT</a></li>
<li><a href="https://suno.com/home">suno -AI 音乐</a></li>
<li><a href="https://notebooklm.google/">Google NotebookLM | Note Taking &amp; Research Assistant Powered by AI</a></li>
<li><a href="https://www.perplexity.ai/">Perplexity -AI搜索</a></li>
<li><a href="https://x.ai/grok">Grok</a></li>
<li><a href="https://chatgpt.com/c/6767ea68-f408-8006-acb2-c5d70776df66">ChatGPT</a></li>
<li><a href="https://www.cursor.com/">Cursor - The AI Code Editor</a></li>
<li><a href="https://openai.com/sora#research">Sora</a></li>
<li><a href="https://flowith.io/blank">flowith 2.0 - Your AI Creation Workspace, with Knowledge</a></li>
<li><a href="https://scispace.com/">AI Chat for scientific PDFs | SciSpace</a></li>
<li><a href="https://ai-bot.cn/">AI工具集官网 | 1000+ AI工具集合，国内外AI工具集导航大全</a></li>
<li><a href="https://manus.im/">Manus</a><a href="https://manus.im/?index=1">Manus</a><a href="https://kimi.moonshot.cn/">Kimi - 会推理解析，能深度思考的AI助手</a></li>
</ul>
<h3 id="三，学习">三，学习</h3>
<ul>
<li>
<p><a href="https://welearn.sflep.com/">WE Learn 随行课堂</a></p>
</li>
<li>
<p><a href="https://sso.unipus.cn/sso/login?service=https%3A%2F%2Fitestcloud.unipus.cn%2Futest%2Fitest%2Flogin%3F_rp%3D%2Fitest%3Fx%3D1733474535591">Unipus-欢迎登录</a></p>
</li>
<li>
<p><a href="https://www.nature.com/articles/s41586-020-2855-y">复杂天然产物合成的计算规划 |自然界</a></p>
</li>
<li>
<p><a href="http://10.10.20.228/OJ4C/user/home.jsp">RUC在线评测</a></p>
</li>
<li>
<p><a href="https://www.sciencedirect.com/journal/artificial-intelligence-chemistry?adobe_mc=MCMID%3D31246228851555864180670995357061575273%7CMCORGID%3D4D6368F454EC41940A4C98A6@AdobeOrg%7CTS%3D1739021971&amp;dgcid=sd%3Ajf%3Asearch">人工智能化学 |期刊 |ScienceDirect.com by Elsevier</a></p>
</li>
<li>
<p><a href="https://k.ruc.edu.cn/UserClient/homePage.html?v=202412110011">人大未来课堂-首页</a><a href="https://unicourse.ruc.edu.cn/index/user_profile/index.html">我的资料 unicourse.ruc.edu.cn</a></p>
</li>
<li>
<p><a href="https://matlabacademy.mathworks.com/cn/?page=1&amp;sort=featured&amp;s_tid=pl_learn">自定进度在线课程 - MATLAB &amp; Simulink</a></p>
</li>
</ul>
<h3 id="四，source">四，source</h3>
<ul>
<li>
<p><a href="https://www.w3school.com.cn/index.html">w3school 在线教程</a></p>
</li>
<li>
<p><a href="https://www.runoob.com/">菜鸟教程 - 学的不仅是技术，更是梦想！</a></p>
</li>
<li>
<p><a href="https://www.sololearn.com/en/learn/courses/python-introduction">Welcome | Sololearn: Learn to code for FREE!</a></p>
</li>
<li>
<p><a href="https://bohrium.dp.tech/home">玻尔 | 全球科学家的 AI for Science 空间站</a></p>
</li>
<li>
<p><a href="https://www.chinaw3c.org/">W3C中国</a></p>
</li>
<li>
<p><a href="https://zh.go-to-library.sk/">Z-library项目 - 保持与我们的Library Z联系</a></p>
</li>
<li>
<p><a href="https://z-library.sk/">Z-library Project - eBook Library Z. Download free Books</a></p>
</li>
<li>
<p><a href="https://z-lib.fm/">Z-Library – the world’s largest e-book library. Your gateway to knowledge and culture.</a></p>
</li>
<li>
<p><a href="https://deepmodeling.com/">DeepModeling</a></p>
</li>
<li>
<p><a href="https://github.com/">GitHub</a><a href="https://markdown.com.cn/basic-syntax/ordered-lists.html">Ordered Lists | Markdown 官方教程</a></p>
</li>
</ul>
<h3 id="五，信息，平台">五，信息，平台</h3>
<ul>
<li><a href="https://www.dp.tech/">深势科技-全球AI for Science领导者</a></li>
<li><a href="https://www.chemsoc.org.cn/meeting/home/">学术会议 - 中国化学会</a></li>
<li><a href="https://support.hp.com/cn-zh/contact/help/printer">联络官方 HP® 支持 – 中国 - 中国 HP®客户支持</a></li>
<li><a href="https://mp.weixin.qq.com/cgi-bin/home?t=home/index&amp;lang=zh_CN&amp;token=1316969284">公众号</a></li>
<li><a href="https://gitcode.com/gh_mirrors">GitHub 加速计划 - GitCode</a></li>
<li><a href="https://tokeninsight.com/zh/research/miscellaneous/what-is-cosmos-a-complete-guide">什么是 Cosmos？Cosmos 生态完全指南 | TokenInsight</a></li>
<li><a href="https://tokeninsight.com/zh/cryptocurrencies">区块链，数字货币实时价格等数据，新闻，研究与评级 | TokenInsight</a></li>
<li><a href="https://blockchair.com/zh">Blockchair</a></li>
<li><a href="https://stackoverflow.com/questions">最新问题 - Stack Overflow</a></li>
<li><a href="https://www.csc.edu.cn/article/3209">中外合作奖学金项目对外联系信息 -欢迎访问国家留学网！</a></li>
<li><a href="https://sa.csc.edu.cn/student/#/login?redirect=%2Fhome">国家公派留学管理信息平台</a></li>
<li><a href="https://www.cnblogs.com/wutongxue132/p/16684085.html">MarkDown支持Emoji表情 - OWIeruy - 博客园</a></li>
<li><a href="https://blog.csdn.net/qq_40896997/article/details/106551767">Markdown表情大全-CSDN博客</a></li>
<li><a href="https://github.com/iCSToCS/CSBook?tab=readme-ov-file#%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C">iCSToCS/CSBook: 计算机类常用电子书整理，并且附带下载链接，包括Java，Python，Linux，Go，C，C++，数据结构与算法，人工智能，计算机基础，面试，设计模式，数据库，前端等书籍</a></li>
<li>[Tutorial](file:///D:/Magicbook_Guyue_Apps/Steam/steamapps/common/VPet/Tutorial.html)</li>
<li><a href="https://store.steampowered.com/">欢迎来到 Steam</a></li>
<li><a href="https://pt.ziziyi.com/element/P">P - 元素周期表PRO 高颜值化学必备小工具</a></li>
<li><a href="https://dayadsa.chaoxing.com/smas/article/search">检测记录</a></li>
</ul>
<h3 id="六，项目">六，项目</h3>
<ul>
<li><a href="https://www.codecademy.com/resources/docs/ai">Codecademy|人工智能</a></li>
<li><a href="https://pubs.acs.org/toc/jcisd8/65/4">Journal of Chemical Information and Modeling Vol. 65 No. 4 - ACS Publications</a></li>
<li><a href="https://www.codecademy.com/learn">我的主页 |Codecademy</a></li>
<li><a href="https://leetcode.cn/">力扣 (LeetCode) 全球极客挚爱的技术成长平台</a></li>
<li><a href="https://www.kaggle.com/">kaggle-查找开放数据集和机器学习项目</a></li>
<li><a href="https://www.coursera.org/enterprise/articles?utm_campaign=website&amp;utm_content=corp-to-landing-for-campus&amp;utm_medium=coursera&amp;utm_source=header&amp;pageNumber=2">Coursera Enterprise Articles | Coursera</a></li>
<li><a href="https://www.coursera.org/">Coursera 课程 |来自顶尖大学的在线课程。免费加入</a></li>
<li><a href="https://www.edx.org/">edx-培养新技能。推动您的职业生涯。</a></li>
<li><a href="https://feedly.com/news-reader">Feedly News Reader：掌控您的新闻源</a></li>
<li><a href="https://pubs.acs.org/journal/jcisd8#">Journal of Chemical Information and Modeling - ACS Publications</a></li>
<li><a href="http://hfgac72cb9ce4f8b54efbswqvopw6bucc06x0q.figx.libproxy.ruc.edu.cn/journal/jcisd8#">Journal of Chemical Information and Modeling - ACS-By RUC</a></li>
<li><a href="https://preferences.acs.org/journals">ACS Publications Email Preferences</a></li>
</ul>
<h3 id="七，社区">七，社区</h3>
<ul>
<li><a href="https://www.3body.com/home.html">三体官方网站</a></li>
<li><a href="https://www.ysjf.com/home">影视飓风</a></li>
<li><a href="https://jandan.net/">煎蛋 - 地球上没有新鲜事</a></li>
<li><a href="https://jandan.net/p/116774#/">从“spam”到“slop”：AI生成的劣质内容 - 煎蛋</a></li>
<li><a href="https://news.ycombinator.com/item?id=41900402">字节跳动因破坏 AI 项目而解雇实习生 |黑客新闻</a></li>
<li><a href="https://news.ycombinator.com/news">黑客新闻</a></li>
<li><a href="https://hitokoto.cn/">Hitokoto - 一言</a></li>
<li><a href="https://ifdian.net/explore">发现创作者 | 爱发电</a></li>
<li><a href="https://sspai.com/">少数派 - 高效工作，品质生活</a></li>
<li><a href="https://x.com/elonmusk">Elon Musk (@elonmusk) / X</a></li>
<li><a href="https://www.youtube.com/feed/storefront">YouTube</a></li>
</ul>
<h3 id="八，Apps-Tools">八，Apps&amp;Tools</h3>
<ul>
<li><a href="https://wx.mail.qq.com/home/index?sid=zbl0SIx7ZHIu-W5MAJlQOAAA#/list/2">QQ邮箱</a></li>
<li><a href="https://xiuuu66.buzz/#/dashboard">Xiuuu|VPN</a></li>
<li><a href="https://mail.google.com/mail/u/0/#inbox"> Gmail</a></li>
<li><a href="https://www.latex-project.org/get/">Get LaTeX - Mac OS, Windows, Linux</a></li>
<li><a href="https://typoraio.cn/">Typora 官方中文站</a></li>
<li><a href="https://obsidian.md/">Obsidian - Sharpen your thinking</a></li>
<li><a href="https://calendar.google.com/calendar/u/0/r?pli=1">Google 日历 - 2025年2月16日这周</a></li>
<li><a href="https://thorn.so/">Thorn_面向文章创作和个人建站的一体化工具</a></li>
<li><a href="https://www.feishu.cn/download">下载飞书 App 及桌面客户端 - 飞书官网</a></li>
<li><a href="https://www.whatismyip.com/">What Is My IP? Best Way To Check Your Public IP Address</a></li>
<li><a href="https://xiuuu88.buzz/">Xiuuu_clash</a></li>
<li><a href="https://xiuuu.cc/#/dashboard">Xiuuu</a></li>
<li><a href="https://email.163.com/">网易免费邮箱 - 你的专业电子邮局</a><a href="https://www.foxmail.com/">Foxmail for Windows</a></li>
<li><a href="https://play.google.com/store/apps?hl=zh-CN">Google Play 上的 Android 应用</a></li>
<li><a href="https://www.clash.la/releases/">Clash Releases ｜Clash for window | Clash Verge | Clash for Android ｜Clash Meta ｜ClashX</a></li>
<li><a href="https://tool.lu/ip/">IP归属地查询 - 在线工具</a></li>
<li><a href="https://www.bandisoft.com/bandizip/">Bandizip 官方网站 - 免费压缩软件下载 (Windows)</a></li>
<li><a href="https://uiverse.io/">Uiverse | The Largest Library of Open-Source UI elements</a></li>
<li><a href="https://www.python.org/">Welcome to Python.org</a></li>
<li><a href="https://docs.arduino.cc/software/ide/#ide-v2">Arduino IDE |Arduino 文档</a></li>
</ul>
<h3 id="九，BLOG搭建相关">九，BLOG搭建相关</h3>
<ul>
<li><a href="https://design.dev/">Design.dev</a></li>
<li><a href="https://hexo.io/docs/troubleshooting.html">疑难解答 |Hexo 系列</a></li>
<li><a href="https://www.svgrepo.com/collection/dazzle-line-icons/6">Dazzle Line Icons Collection - PAGE 6 - SVG Repo</a></li>
<li><a href="https://up.woozooo.com/mydisk.php">蓝奏云</a></li>
<li><a href="https://guyue2.imgbb.com/">ImgBB云存储</a></li>
<li><a href="https://cdnjson.com/guyue/?list=images&amp;sort=date_asc&amp;page=1">CDN加速图床-免费图片生成连接外链工具</a></li>
<li><a href="https://vercel.com/">Vercel_ 构建、扩展和保护更快、更个性化的 Web</a></li>
<li><a href="https://blog.cuijiacai.com/blog-building/">个人博客搭建教程 | 爱扑bug的熊</a></li>
<li><a href="https://getbootstrap.com/docs/5.0/examples/">Examples · Bootstrap v5.0</a></li>
<li><a href="https://html5up.net/">HTML5 UP! Responsive HTML5 and CSS3 Site Templates</a></li>
<li><a href="https://console.cloud.tencent.com/tcb/env/index?rid=4&amp;switchToTcb=true">腾讯云 - 控制台</a></li>
<li><a href="https://cloud.tsinghua.edu.cn/d/df482a15afb64dfeaff8/files/?p=/fastgithub_win-x64.zip">清华大学云盘</a></li>
<li><a href="https://coolbackgrounds.io/">酷炫的背景</a></li>
</ul>
<h3 id="十，天文">十，天文</h3>
<ul>
<li><a href="https://nadc.china-vo.org/?&amp;locale=zh_CN">首页 | 国家天文科学数据中心 | NADC</a></li>
<li><a href="https://science.nasa.gov/solar-system/asteroids/2024-yr4/">2024 YR4 - NASA Science</a></li>
<li><a href="https://www.cosmos.esa.int/web/smpag/home">COSMOS Home - SMPAG - Cosmos</a></li>
<li><a href="https://www.esa.int/">欧洲航天局</a></li>
<li><a href="https://neo.ssa.esa.int/risk-list">Risk List - NEO 欧洲航天局 近地天体协调中心</a></li>
<li><a href="https://cneos.jpl.nasa.gov/sentry/">Sentry: Earth Impact Monitoring NASA行星撞击概率预测</a></li>
</ul>
<h3 id="十一，interesting-webs">十一，interesting webs</h3>
<ul>
<li><a href="https://answer.hi2future.com/">答案之书（解答之书）- 你遇到的任何问题，都可以在这里找到答案</a></li>
<li><a href="https://blogwe.com/">博客我们 - Blogwe - 做更好的个人博客导航网站</a></li>
<li><a href="https://mathwithbaddrawings.com/authors-choice/">亮点 – 数学与糟糕的绘图</a></li>
<li><a href="https://chen-huaneng.github.io/2024/11/14/2024-11-14-2024-11-14-website/">Website - 有趣的网站合集 - AbelのBlog</a></li>
<li><a href="https://chvin.github.io/react-tetris/?lan=zh-cn">俄罗斯方块</a></li>
</ul>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>持续更新</tag>
        <tag>大佬的网站</tag>
        <tag>有趣的网站</tag>
      </tags>
  </entry>
  <entry>
    <title>python学习</title>
    <url>/2025/03/24/python/</url>
    <content><![CDATA[<p>最近一段时间在学习python，为了便于查找相关信息，我把一些与python有关的内容汇总到了下面，如果你看到了这篇，希望对你有用。</p>
<span id="more"></span>
<h2 id="一-tkinter用法">一 tkinter用法</h2>
<p><code>tkinter</code>是 Python 的标准图形用户界面（GUI）库，用于创建简单的桌面应用程序。它简单易用，适合初学者入门 GUI 编程。以下是<code>tkinter</code>的一些基本用法和常见组件的介绍。</p>
<h3 id="1-基本框架">1.基本框架</h3>
<p>在使用<code>tkinter</code>时，通常需要以下步骤：</p>
<p>• 导入<code>tkinter</code>模块。</p>
<p>• 创建一个主窗口（<code>Tk</code>对象）。</p>
<p>• 添加各种组件（如按钮、标签、文本框等）。</p>
<p>• 启动事件循环（<code>mainloop()</code>），让窗口保持打开状态。</p>
<p>示例代码</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建主窗口</span></span><br><span class="line">root = tk.Tk()</span><br><span class="line">root.title(<span class="string">"Tkinter 示例"</span>)  <span class="comment"># 设置窗口标题</span></span><br><span class="line">root.geometry(<span class="string">"400x300"</span>)  <span class="comment"># 设置窗口大小（宽x高）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动事件循环，让窗口保持打开状态</span></span><br><span class="line">root.mainloop()</span><br></pre></td></tr></tbody></table></figure>
<h3 id="2-常见组件">2.常见组件</h3>
<h4 id="2-1-标签（Label）">2.1 标签（Label）</h4>
<p>用于显示文本或图片。</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">label = tk.Label(root, text=<span class="string">"这是一个标签"</span>, font=(<span class="string">"Arial"</span>, <span class="number">14</span>))</span><br><span class="line">label.pack()  <span class="comment"># 使用 pack 布局管理器</span></span><br></pre></td></tr></tbody></table></figure>
<h4 id="2-2-按钮（Button）">2.2 按钮（Button）</h4>
<p>用于触发事件。</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">on_button_click</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"按钮被点击了！"</span>)</span><br><span class="line"></span><br><span class="line">button = tk.Button(root, text=<span class="string">"点击我"</span>, command=on_button_click)</span><br><span class="line">button.pack()</span><br></pre></td></tr></tbody></table></figure>
<h4 id="2-3-文本框（Entry）">2.3 文本框（Entry）</h4>
<p>用于输入单行文本。</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">entry = tk.Entry(root)</span><br><span class="line">entry.pack()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">on_button_click</span>():</span><br><span class="line">    user_input = entry.get()  <span class="comment"># 获取文本框中的内容</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"输入的内容是："</span>, user_input)</span><br><span class="line"></span><br><span class="line">button = tk.Button(root, text=<span class="string">"提交"</span>, command=on_button_click)</span><br><span class="line">button.pack()</span><br></pre></td></tr></tbody></table></figure>
<h4 id="2-4-文本区域（Text）">2.4 文本区域（Text）</h4>
<p>用于输入多行文本。</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">text_area = tk.Text(root, height=<span class="number">5</span>, width=<span class="number">30</span>)</span><br><span class="line">text_area.pack()</span><br></pre></td></tr></tbody></table></figure>
<h4 id="2-5-单选按钮（Radiobutton）">2.5 单选按钮（Radiobutton）</h4>
<p>用于一组互斥的选项。</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">var = tk.IntVar()  <span class="comment"># 用于存储选中的值</span></span><br><span class="line"></span><br><span class="line">radio1 = tk.Radiobutton(root, text=<span class="string">"选项1"</span>, variable=var, value=<span class="number">1</span>)</span><br><span class="line">radio2 = tk.Radiobutton(root, text=<span class="string">"选项2"</span>, variable=var, value=<span class="number">2</span>)</span><br><span class="line">radio1.pack()</span><br><span class="line">radio2.pack()</span><br></pre></td></tr></tbody></table></figure>
<h4 id="2-6-复选框（Checkbutton）">2.6 复选框（Checkbutton）</h4>
<p>用于一组可多选的选项。</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">var1 = tk.IntVar()</span><br><span class="line">var2 = tk.IntVar()</span><br><span class="line"></span><br><span class="line">check1 = tk.Checkbutton(root, text=<span class="string">"选项1"</span>, variable=var1)</span><br><span class="line">check2 = tk.Checkbutton(root, text=<span class="string">"选项2"</span>, variable=var2)</span><br><span class="line">check1.pack()</span><br><span class="line">check2.pack()</span><br></pre></td></tr></tbody></table></figure>
<h4 id="2-7-下拉菜单（OptionMenu）">2.7 下拉菜单（OptionMenu）</h4>
<p>用于选择一个选项。</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">var = tk.StringVar()</span><br><span class="line">var.<span class="built_in">set</span>(<span class="string">"选项1"</span>)  <span class="comment"># 默认值</span></span><br><span class="line"></span><br><span class="line">options = [<span class="string">"选项1"</span>, <span class="string">"选项2"</span>, <span class="string">"选项3"</span>]</span><br><span class="line">option_menu = tk.OptionMenu(root, var, *options)</span><br><span class="line">option_menu.pack()</span><br></pre></td></tr></tbody></table></figure>
<h4 id="2-8-滑块（Scale）">2.8 滑块（Scale）</h4>
<p>用于选择一个数值范围。</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">scale = tk.Scale(root, from_=<span class="number">0</span>, to=<span class="number">100</span>, orient=tk.HORIZONTAL)</span><br><span class="line">scale.pack()</span><br></pre></td></tr></tbody></table></figure>
<h4 id="2-9-列表框（Listbox）">2.9 列表框（Listbox）</h4>
<p>用于显示一组选项。</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">listbox = tk.Listbox(root)</span><br><span class="line">listbox.insert(<span class="number">1</span>, <span class="string">"选项1"</span>)</span><br><span class="line">listbox.insert(<span class="number">2</span>, <span class="string">"选项2"</span>)</span><br><span class="line">listbox.insert(<span class="number">3</span>, <span class="string">"选项3"</span>)</span><br><span class="line">listbox.pack()</span><br></pre></td></tr></tbody></table></figure>
<h4 id="2-10-消息框（Messagebox）">2.10 消息框（Messagebox）</h4>
<p>用于显示提示信息。</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> messagebox</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">show_message</span>():</span><br><span class="line">    messagebox.showinfo(<span class="string">"提示"</span>, <span class="string">"这是一个消息框"</span>)</span><br><span class="line"></span><br><span class="line">button = tk.Button(root, text=<span class="string">"显示消息框"</span>, command=show_message)</span><br><span class="line">button.pack()</span><br></pre></td></tr></tbody></table></figure>
<h3 id="3-布局管理器">3.布局管理器</h3>
<p><code>tkinter</code>提供了三种布局管理器：<code>pack</code>、<code>grid</code>和<code>place</code>。</p>
<h4 id="3-1-pack">3.1 pack</h4>
<p>自动将组件排列到窗口中。</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">label1 = tk.Label(root, text=<span class="string">"标签1"</span>)</span><br><span class="line">label2 = tk.Label(root, text=<span class="string">"标签2"</span>)</span><br><span class="line">label1.pack()</span><br><span class="line">label2.pack()</span><br></pre></td></tr></tbody></table></figure>
<h4 id="3-2-grid">3.2 grid</h4>
<p>以表格形式排列组件。</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">label1 = tk.Label(root, text=<span class="string">"标签1"</span>)</span><br><span class="line">label2 = tk.Label(root, text=<span class="string">"标签2"</span>)</span><br><span class="line">label1.grid(row=<span class="number">0</span>, column=<span class="number">0</span>)</span><br><span class="line">label2.grid(row=<span class="number">1</span>, column=<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<h4 id="3-3-place">3.3 place</h4>
<p>通过指定坐标来放置组件。</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">label = tk.Label(root, text=<span class="string">"标签"</span>)</span><br><span class="line">label.place(x=<span class="number">50</span>, y=<span class="number">100</span>)</span><br></pre></td></tr></tbody></table></figure>
<h3 id="4-事件绑定">4.事件绑定</h3>
<p>可以为组件绑定事件，如鼠标点击、键盘输入等。</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">on_click</span>(<span class="params">event</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"鼠标点击了！"</span>)</span><br><span class="line"></span><br><span class="line">button = tk.Button(root, text=<span class="string">"点击我"</span>)</span><br><span class="line">button.pack()</span><br><span class="line">button.bind(<span class="string">"&lt;Button-1&gt;"</span>, on_click)  <span class="comment"># 绑定鼠标左键点击事件</span></span><br></pre></td></tr></tbody></table></figure>
<h3 id="5-完整示例">5.完整示例</h3>
<p>以下是一个完整的示例，结合了多种组件和布局：</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> messagebox</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">on_button_click</span>():</span><br><span class="line">    user_input = entry.get()</span><br><span class="line">    messagebox.showinfo(<span class="string">"提示"</span>, <span class="string">f"你输入的内容是：<span class="subst">{user_input}</span>"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">on_radio_select</span>():</span><br><span class="line">    selection = var.get()</span><br><span class="line">    messagebox.showinfo(<span class="string">"提示"</span>, <span class="string">f"你选择了：选项<span class="subst">{selection}</span>"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建主窗口</span></span><br><span class="line">root = tk.Tk()</span><br><span class="line">root.title(<span class="string">"Tkinter 示例"</span>)</span><br><span class="line">root.geometry(<span class="string">"400x300"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 标签</span></span><br><span class="line">label = tk.Label(root, text=<span class="string">"请输入内容："</span>, font=(<span class="string">"Arial"</span>, <span class="number">12</span>))</span><br><span class="line">label.pack()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 文本框</span></span><br><span class="line">entry = tk.Entry(root)</span><br><span class="line">entry.pack()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 按钮</span></span><br><span class="line">button = tk.Button(root, text=<span class="string">"提交"</span>, command=on_button_click)</span><br><span class="line">button.pack()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 单选按钮</span></span><br><span class="line">var = tk.IntVar()</span><br><span class="line">radio1 = tk.Radiobutton(root, text=<span class="string">"选项1"</span>, variable=var, value=<span class="number">1</span>, command=on_radio_select)</span><br><span class="line">radio2 = tk.Radiobutton(root, text=<span class="string">"选项2"</span>, variable=var, value=<span class="number">2</span>, command=on_radio_select)</span><br><span class="line">radio1.pack()</span><br><span class="line">radio2.pack()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动事件循环</span></span><br><span class="line">root.mainloop()</span><br></pre></td></tr></tbody></table></figure>
<p>这个示例展示了如何创建一个简单的窗口，包含标签、文本框、按钮和单选按钮，并为按钮和单选按钮绑定了事件。</p>
<p>总结</p>
<p><code>tkinter</code>是一个功能强大的 GUI 库，适合创建简单的桌面应用程序。通过掌握基本组件和布局管理器的使用，你可以快速构建出自己的 GUI 应用。如果需要更复杂的界面，可以结合其他库（如<code>ttk</code>模块）来实现更现代的外观和功能。</p>
<h2 id="二-matplotlib-pyplot图表">二 matplotlib.pyplot图表</h2>
<p><strong>以下来自于kimi</strong></p>
<p><code>matplotlib.pyplot</code>是 Python 中一个非常强大的绘图库，提供了多种类型的图表来满足不同的数据可视化需求。以下是一些常见的图表类型及其简单介绍：</p>
<h3 id="1-折线图（Line-Plot）">1.折线图（Line Plot）</h3>
<p>• 用途：用于展示数据随时间或某个连续变量的变化趋势。</p>
<p>• 函数：<code>plt.plot()</code></p>
<p>• 示例代码：</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">x = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line">y = [<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>]</span><br><span class="line">plt.plot(x, y)</span><br><span class="line">plt.title(<span class="string">"Line Plot"</span>)</span><br><span class="line">plt.xlabel(<span class="string">"X-axis"</span>)</span><br><span class="line">plt.ylabel(<span class="string">"Y-axis"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<h3 id="2-散点图（Scatter-Plot）">2.散点图（Scatter Plot）</h3>
<p>• 用途：用于展示两个变量之间的关系，适合观察数据的分布情况。</p>
<p>• 函数：<code>plt.scatter()</code></p>
<p>• 示例代码：</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">x = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line">y = [<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>]</span><br><span class="line">plt.scatter(x, y)</span><br><span class="line">plt.title(<span class="string">"Scatter Plot"</span>)</span><br><span class="line">plt.xlabel(<span class="string">"X-axis"</span>)</span><br><span class="line">plt.ylabel(<span class="string">"Y-axis"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<h3 id="3-柱状图（Bar-Chart）">3.柱状图（Bar Chart）</h3>
<p>• 用途：用于比较不同类别的数据大小。</p>
<p>• 函数：<code>plt.bar()</code>（垂直柱状图）或<code>plt.barh()</code>（水平柱状图）</p>
<p>• 示例代码：</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">categories = [<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>, <span class="string">"D"</span>]</span><br><span class="line">values = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">15</span>, <span class="number">30</span>]</span><br><span class="line">plt.bar(categories, values)</span><br><span class="line">plt.title(<span class="string">"Bar Chart"</span>)</span><br><span class="line">plt.xlabel(<span class="string">"Categories"</span>)</span><br><span class="line">plt.ylabel(<span class="string">"Values"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<h3 id="4-直方图（Histogram）">4.直方图（Histogram）</h3>
<p>• 用途：用于展示数据的分布情况，通常用于连续数据的分组统计。</p>
<p>• 函数：<code>plt.hist()</code></p>
<p>• 示例代码：</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">data = np.random.randn(<span class="number">1000</span>)</span><br><span class="line">plt.hist(data, bins=<span class="number">30</span>)</span><br><span class="line">plt.title(<span class="string">"Histogram"</span>)</span><br><span class="line">plt.xlabel(<span class="string">"Value"</span>)</span><br><span class="line">plt.ylabel(<span class="string">"Frequency"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<h3 id="5-饼图（Pie-Chart）">5.饼图（Pie Chart）</h3>
<p>• 用途：用于展示各部分占总体的比例关系。</p>
<p>• 函数：<code>plt.pie()</code></p>
<p>• 示例代码：</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">sizes = [<span class="number">215</span>, <span class="number">130</span>, <span class="number">245</span>, <span class="number">210</span>]</span><br><span class="line">labels = [<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>, <span class="string">"D"</span>]</span><br><span class="line">plt.pie(sizes, labels=labels, autopct=<span class="string">'%1.1f%%'</span>)</span><br><span class="line">plt.title(<span class="string">"Pie Chart"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<h3 id="6-箱线图（Box-Plot）">6.箱线图（Box Plot）</h3>
<p>• 用途：用于展示数据的分布情况，包括中位数、四分位数、异常值等。</p>
<p>• 函数：<code>plt.boxplot()</code></p>
<p>• 示例代码：</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">data = np.random.randn(<span class="number">100</span>)</span><br><span class="line">plt.boxplot(data)</span><br><span class="line">plt.title(<span class="string">"Box Plot"</span>)</span><br><span class="line">plt.ylabel(<span class="string">"Value"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<h3 id="7-面积图（Area-Plot）">7.面积图（Area Plot）</h3>
<p>• 用途：类似于折线图，但折线下方的区域被填充。</p>
<p>• 函数：<code>plt.fill_between()</code></p>
<p>• 示例代码：</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">x = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line">y = [<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>]</span><br><span class="line">plt.fill_between(x, y, alpha=<span class="number">0.3</span>)</span><br><span class="line">plt.plot(x, y)</span><br><span class="line">plt.title(<span class="string">"Area Plot"</span>)</span><br><span class="line">plt.xlabel(<span class="string">"X-axis"</span>)</span><br><span class="line">plt.ylabel(<span class="string">"Y-axis"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<h3 id="8-堆叠柱状图（Stacked-Bar-Chart）">8.堆叠柱状图（Stacked Bar Chart）</h3>
<p>• 用途：用于展示多个类别在不同组中的分布情况。</p>
<p>• 函数：<code>plt.bar()</code>（通过堆叠实现）</p>
<p>• 示例代码：</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">categories = [<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>]</span><br><span class="line">group1 = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>]</span><br><span class="line">group2 = [<span class="number">15</span>, <span class="number">25</span>, <span class="number">35</span>]</span><br><span class="line">plt.bar(categories, group1, label=<span class="string">"Group 1"</span>)</span><br><span class="line">plt.bar(categories, group2, bottom=group1, label=<span class="string">"Group 2"</span>)</span><br><span class="line">plt.title(<span class="string">"Stacked Bar Chart"</span>)</span><br><span class="line">plt.xlabel(<span class="string">"Categories"</span>)</span><br><span class="line">plt.ylabel(<span class="string">"Values"</span>)</span><br><span class="line">plt.legend()</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<h3 id="9-堆叠面积图（Stacked-Area-Plot）">9.堆叠面积图（Stacked Area Plot）</h3>
<p>• 用途：用于展示多个类别在不同时间点的分布情况。</p>
<p>• 函数：<code>plt.stackplot()</code></p>
<p>• 示例代码：</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">x = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line">y1 = [<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>]</span><br><span class="line">y2 = [<span class="number">2</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">17</span>, <span class="number">26</span>]</span><br><span class="line">plt.stackplot(x, y1, y2, labels=[<span class="string">"Series 1"</span>, <span class="string">"Series 2"</span>])</span><br><span class="line">plt.title(<span class="string">"Stacked Area Plot"</span>)</span><br><span class="line">plt.xlabel(<span class="string">"X-axis"</span>)</span><br><span class="line">plt.ylabel(<span class="string">"Y-axis"</span>)</span><br><span class="line">plt.legend()</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<h3 id="10-热力图（Heatmap）">10.热力图（Heatmap）</h3>
<p>• 用途：用于展示二维数据的分布情况，通常用于相关性矩阵等。</p>
<p>• 函数：<code>plt.imshow()</code>或<code>sns.heatmap()</code>（需要<code>seaborn</code>库）</p>
<p>• 示例代码：</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">data = np.random.rand(<span class="number">10</span>, <span class="number">10</span>)</span><br><span class="line">plt.imshow(data, cmap=<span class="string">"hot"</span>, interpolation=<span class="string">"nearest"</span>)</span><br><span class="line">plt.colorbar()</span><br><span class="line">plt.title(<span class="string">"Heatmap"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<h3 id="11-雷达图（Radar-Chart）">11.雷达图（Radar Chart）</h3>
<p>• 用途：用于展示多个变量的相对大小，适合多维度数据的比较。</p>
<p>• 函数：需要手动绘制</p>
<p>• 示例代码：</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">labels = [<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>, <span class="string">"D"</span>, <span class="string">"E"</span>]</span><br><span class="line">values = [<span class="number">5</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">1</span>]</span><br><span class="line">angles = np.linspace(<span class="number">0</span>, <span class="number">2</span> * np.pi, <span class="built_in">len</span>(labels), endpoint=<span class="literal">False</span>).tolist()</span><br><span class="line">values += values[:<span class="number">1</span>]  <span class="comment"># Close the loop</span></span><br><span class="line">angles += angles[:<span class="number">1</span>]  <span class="comment"># Close the loop</span></span><br><span class="line"></span><br><span class="line">fig, ax = plt.subplots(figsize=(<span class="number">6</span>, <span class="number">6</span>), subplot_kw=<span class="built_in">dict</span>(polar=<span class="literal">True</span>))</span><br><span class="line">ax.fill(angles, values, color=<span class="string">"red"</span>, alpha=<span class="number">0.25</span>)</span><br><span class="line">ax.plot(angles, values, color=<span class="string">"red"</span>, linewidth=<span class="number">2</span>)</span><br><span class="line">ax.set_thetagrids(np.degrees(angles[:-<span class="number">1</span>]), labels)</span><br><span class="line">plt.title(<span class="string">"Radar Chart"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<h3 id="12-极坐标图（Polar-Plot）">12.极坐标图（Polar Plot）</h3>
<p>• 用途：用于展示角度和半径的关系。</p>
<p>• 函数：<code>plt.polar()</code></p>
<p>• 示例代码：</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">theta = np.linspace(<span class="number">0</span>, <span class="number">2</span> * np.pi, <span class="number">100</span>)</span><br><span class="line">r = np.sin(theta)</span><br><span class="line">plt.polar(theta, r)</span><br><span class="line">plt.title(<span class="string">"Polar Plot"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p>这些图表类型只是<code>matplotlib.pyplot</code>提供的一部分功能。</p>
<h2 id="三-pandas用法">三 pandas用法</h2>
<p><code>pandas</code>是 Python 中一个功能强大的数据分析库，广泛用于数据处理、清洗、分析和可视化。它提供了两个主要的数据结构：<code>DataFrame</code>和<code>Series</code>。以下是一些基本的<code>pandas</code>用法和常见操作的介绍。</p>
<h3 id="1-导入-pandas">1.导入 pandas</h3>
<p>在使用<code>pandas</code>之前，需要先导入它。通常使用<code>pd</code>作为别名：</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
<h3 id="2-创建数据结构">2.创建数据结构</h3>
<h4 id="2-1-Series">2.1 Series</h4>
<p><code>Series</code>是一个一维数组，类似于 Python 中的列表，但带有索引。</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 创建一个简单的 Series</span></span><br><span class="line">data = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line">series = pd.Series(data)</span><br><span class="line"><span class="built_in">print</span>(series)</span><br></pre></td></tr></tbody></table></figure>
<p>输出：</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">0    1</span><br><span class="line">1    2</span><br><span class="line">2    3</span><br><span class="line">3    4</span><br><span class="line">4    5</span><br><span class="line">dtype: int64</span><br></pre></td></tr></tbody></table></figure>
<h4 id="2-2-DataFrame">2.2 DataFrame</h4>
<p><code>DataFrame</code>是一个二维表格，类似于 Excel 表格，由多个<code>Series</code>组成。</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 创建一个简单的 DataFrame</span></span><br><span class="line">data = {</span><br><span class="line">    <span class="string">"Name"</span>: [<span class="string">"Alice"</span>, <span class="string">"Bob"</span>, <span class="string">"Charlie"</span>],</span><br><span class="line">    <span class="string">"Age"</span>: [<span class="number">25</span>, <span class="number">30</span>, <span class="number">35</span>],</span><br><span class="line">    <span class="string">"City"</span>: [<span class="string">"New York"</span>, <span class="string">"Los Angeles"</span>, <span class="string">"Chicago"</span>]</span><br><span class="line">}</span><br><span class="line">df = pd.DataFrame(data)</span><br><span class="line"><span class="built_in">print</span>(df)</span><br></pre></td></tr></tbody></table></figure>
<p>输出：</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">      Name  Age         City</span><br><span class="line">0    Alice   25     New York</span><br><span class="line">1      Bob   30  Los Angeles</span><br><span class="line">2  Charlie   35      Chicago</span><br></pre></td></tr></tbody></table></figure>
<h3 id="3-读取和保存数据">3.读取和保存数据</h3>
<h4 id="3-1-读取数据">3.1 读取数据</h4>
<p><code>pandas</code>支持多种数据格式，如 CSV、Excel、JSON 等。</p>
<p>• 读取 CSV 文件：</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">"data.csv"</span>)</span><br><span class="line"><span class="built_in">print</span>(df)</span><br></pre></td></tr></tbody></table></figure>
<p>• 读取 Excel 文件：</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_excel(<span class="string">"data.xlsx"</span>)</span><br><span class="line"><span class="built_in">print</span>(df)</span><br></pre></td></tr></tbody></table></figure>
<p>• 读取 JSON 文件：</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_json(<span class="string">"data.json"</span>)</span><br><span class="line"><span class="built_in">print</span>(df)</span><br></pre></td></tr></tbody></table></figure>
<h4 id="3-2-保存数据">3.2 保存数据</h4>
<p>同样，<code>pandas</code>也支持将数据保存为多种格式。</p>
<p>• 保存为 CSV 文件：</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.to_csv(<span class="string">"output.csv"</span>, index=<span class="literal">False</span>)</span><br></pre></td></tr></tbody></table></figure>
<p>• 保存为 Excel 文件：</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.to_excel(<span class="string">"output.xlsx"</span>, index=<span class="literal">False</span>)</span><br></pre></td></tr></tbody></table></figure>
<p>• 保存为 JSON 文件：</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.to_json(<span class="string">"output.json"</span>, orient=<span class="string">"records"</span>)</span><br></pre></td></tr></tbody></table></figure>
<h3 id="4-数据查看和筛选">4.数据查看和筛选</h3>
<h4 id="4-1-查看数据">4.1 查看数据</h4>
<p>• 查看前几行数据：</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(df.head())  <span class="comment"># 默认显示前 5 行</span></span><br></pre></td></tr></tbody></table></figure>
<p>• 查看后几行数据：</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(df.tail())  <span class="comment"># 默认显示后 5 行</span></span><br></pre></td></tr></tbody></table></figure>
<p>• 查看数据的形状：</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(df.shape)  <span class="comment"># 返回 (行数, 列数)</span></span><br></pre></td></tr></tbody></table></figure>
<p>• 查看数据的列名：</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(df.columns)</span><br></pre></td></tr></tbody></table></figure>
<p>• 查看数据的基本信息：</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(df.info())</span><br></pre></td></tr></tbody></table></figure>
<h4 id="4-2-筛选数据">4.2 筛选数据</h4>
<p>• 按条件筛选行：</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">filtered_df = df[df[<span class="string">"Age"</span>] &gt; <span class="number">30</span>]</span><br><span class="line"><span class="built_in">print</span>(filtered_df)</span><br></pre></td></tr></tbody></table></figure>
<p>• 按列名筛选列：</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">selected_columns = df[[<span class="string">"Name"</span>, <span class="string">"City"</span>]]</span><br><span class="line"><span class="built_in">print</span>(selected_columns)</span><br></pre></td></tr></tbody></table></figure>
<h3 id="5-数据处理和转换">5.数据处理和转换</h3>
<h4 id="5-1-添加新列">5.1 添加新列</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"Salary"</span>] = [<span class="number">50000</span>, <span class="number">60000</span>, <span class="number">70000</span>]</span><br><span class="line"><span class="built_in">print</span>(df)</span><br></pre></td></tr></tbody></table></figure>
<h4 id="5-2-删除列">5.2 删除列</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.drop(columns=[<span class="string">"Salary"</span>], inplace=<span class="literal">True</span>)</span><br><span class="line"><span class="built_in">print</span>(df)</span><br></pre></td></tr></tbody></table></figure>
<h4 id="5-3-修改数据">5.3 修改数据</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[<span class="number">0</span>, <span class="string">"Age"</span>] = <span class="number">26</span>  <span class="comment"># 修改第 0 行的 "Age" 列</span></span><br><span class="line"><span class="built_in">print</span>(df)</span><br></pre></td></tr></tbody></table></figure>
<p>####　5.4 数据排序</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sorted_df = df.sort_values(by=<span class="string">"Age"</span>, ascending=<span class="literal">False</span>)</span><br><span class="line"><span class="built_in">print</span>(sorted_df)</span><br></pre></td></tr></tbody></table></figure>
<p>5.5 数据分组</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">grouped_df = df.groupby(<span class="string">"City"</span>).mean()</span><br><span class="line"><span class="built_in">print</span>(grouped_df)</span><br></pre></td></tr></tbody></table></figure>
<p>6.数据清洗</p>
<p>6.1 处理缺失值</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 查看缺失值</span></span><br><span class="line"><span class="built_in">print</span>(df.isnull().<span class="built_in">sum</span>())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 填充缺失值</span></span><br><span class="line">df.fillna(value={<span class="string">"Age"</span>: df[<span class="string">"Age"</span>].mean()}, inplace=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除包含缺失值的行</span></span><br><span class="line">df.dropna(inplace=<span class="literal">True</span>)</span><br></pre></td></tr></tbody></table></figure>
<p>6.2 删除重复数据</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.drop_duplicates(inplace=<span class="literal">True</span>)</span><br></pre></td></tr></tbody></table></figure>
<p>6.3 数据类型转换</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"Age"</span>] = df[<span class="string">"Age"</span>].astype(<span class="built_in">int</span>)</span><br><span class="line"><span class="built_in">print</span>(df.dtypes)</span><br></pre></td></tr></tbody></table></figure>
<p>7.数据分析</p>
<p>7.1 基本统计</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(df.describe())  <span class="comment"># 查看数值型列的统计信息</span></span><br></pre></td></tr></tbody></table></figure>
<p>7.2 聚合操作</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(df.groupby(<span class="string">"City"</span>).agg({<span class="string">"Age"</span>: [<span class="string">"mean"</span>, <span class="string">"max"</span>], <span class="string">"Salary"</span>: <span class="string">"sum"</span>}))</span><br></pre></td></tr></tbody></table></figure>
<p>8.数据可视化</p>
<p>虽然<code>pandas</code>本身主要用于数据处理，但它也支持简单的可视化操作，通常结合<code>matplotlib</code>使用。</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制柱状图</span></span><br><span class="line">df[<span class="string">"Age"</span>].plot(kind=<span class="string">"bar"</span>)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制折线图</span></span><br><span class="line">df[<span class="string">"Salary"</span>].plot(kind=<span class="string">"line"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p>9.完整示例</p>
<p>以下是一个完整的示例，展示了如何创建一个<code>DataFrame</code>，进行数据处理和分析，并保存结果。</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个 DataFrame</span></span><br><span class="line">data = {</span><br><span class="line">    <span class="string">"Name"</span>: [<span class="string">"Alice"</span>, <span class="string">"Bob"</span>, <span class="string">"Charlie"</span>, <span class="string">"David"</span>],</span><br><span class="line">    <span class="string">"Age"</span>: [<span class="number">25</span>, <span class="number">30</span>, <span class="number">35</span>, <span class="number">40</span>],</span><br><span class="line">    <span class="string">"City"</span>: [<span class="string">"New York"</span>, <span class="string">"Los Angeles"</span>, <span class="string">"Chicago"</span>, <span class="string">"Houston"</span>],</span><br><span class="line">    <span class="string">"Salary"</span>: [<span class="number">50000</span>, <span class="number">60000</span>, <span class="number">70000</span>, <span class="number">80000</span>]</span><br><span class="line">}</span><br><span class="line">df = pd.DataFrame(data)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看数据</span></span><br><span class="line"><span class="built_in">print</span>(df.head())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 筛选数据</span></span><br><span class="line">filtered_df = df[df[<span class="string">"Age"</span>] &gt; <span class="number">30</span>]</span><br><span class="line"><span class="built_in">print</span>(filtered_df)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加新列</span></span><br><span class="line">df[<span class="string">"Bonus"</span>] = df[<span class="string">"Salary"</span>] * <span class="number">0.1</span></span><br><span class="line"><span class="built_in">print</span>(df)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除列</span></span><br><span class="line">df.drop(columns=[<span class="string">"Bonus"</span>], inplace=<span class="literal">True</span>)</span><br><span class="line"><span class="built_in">print</span>(df)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据排序</span></span><br><span class="line">sorted_df = df.sort_values(by=<span class="string">"Salary"</span>, ascending=<span class="literal">False</span>)</span><br><span class="line"><span class="built_in">print</span>(sorted_df)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据分组</span></span><br><span class="line">grouped_df = df.groupby(<span class="string">"City"</span>).mean()</span><br><span class="line"><span class="built_in">print</span>(grouped_df)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 处理缺失值</span></span><br><span class="line">df.loc[<span class="number">2</span>, <span class="string">"Salary"</span>] = <span class="literal">None</span></span><br><span class="line"><span class="built_in">print</span>(df.isnull().<span class="built_in">sum</span>())</span><br><span class="line">df.fillna(value={<span class="string">"Salary"</span>: df[<span class="string">"Salary"</span>].mean()}, inplace=<span class="literal">True</span>)</span><br><span class="line"><span class="built_in">print</span>(df)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存数据</span></span><br><span class="line">df.to_csv(<span class="string">"output.csv"</span>, index=<span class="literal">False</span>)</span><br></pre></td></tr></tbody></table></figure>
<p>总结</p>
<p><code>pandas</code>是一个功能强大的数据分析工具，通过掌握基本的数据结构、数据读取、数据处理和数据分析方法，可以高效地处理各种数据任务。如果需要更高级的数据分析或可视化功能，可以结合其他库（如<code>numpy</code>、<code>matplotlib</code>、<code>seaborn</code>等）来实现更复杂的需求。</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>持续更新</tag>
        <tag>编程</tag>
        <tag>python</tag>
      </tags>
  </entry>
</search>
